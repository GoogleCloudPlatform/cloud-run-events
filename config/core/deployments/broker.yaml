# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-ingress
  namespace: cloud-run-events
  labels:
    events.cloud.google.com/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: cloud-run-events
      role: broker-ingress
  template:
    metadata:
      labels: *labels
    spec:
      containers:
      - name: broker-ingress
        image: github.com/google/knative-gcp/cmd/broker/ingress
        env:
          - name: PORT
            value: "8080"
        volumeMounts:
        - mountPath: /var/run/cloud-run-events/broker
          name: broker-config
        resources: # TODO(issue #876): determine good values for resource requests/limits
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - configMap:
          name: broker-targets
        name: broker-config
      
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-fanout
  namespace: cloud-run-events
  labels:
    events.cloud.google.com/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: cloud-run-events
      role: broker-fanout
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: broker
      containers:
      - name: broker-fanout
        image: github.com/google/knative-gcp/cmd/broker/fanout
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: cloud.google.com/events
        volumeMounts:
        - mountPath: /var/run/cloud-run-events/broker
          name: broker-config
        resources: # TODO(issue #876): determine good values for resource requests/limits
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - configMap:
          name: broker-targets
        name: broker-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-retry
  namespace: cloud-run-events
  labels:
    events.cloud.google.com/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: cloud-run-events
      role: broker-retry
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: broker
      containers:
      - name: broker-retry
        image: github.com/google/knative-gcp/cmd/broker/retry
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: cloud.google.com/events
        volumeMounts:
        - mountPath: /var/run/cloud-run-events/broker
          name: broker-config
        resources: # TODO(issue #876): determine good values for resource requests/limits
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - configMap:
          name: broker-targets
        name: broker-config
