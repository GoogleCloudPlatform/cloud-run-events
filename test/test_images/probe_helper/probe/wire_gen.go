// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package probe

import (
	"cloud.google.com/go/pubsub"
	"cloud.google.com/go/storage"
	"context"
	"github.com/google/knative-gcp/pkg/utils/clients"
	"github.com/google/knative-gcp/test/test_images/probe_helper/probe/handlers"
	"time"
)

// Injectors from wire.go:

func InitializeTestProbeHelper(ctx context.Context, brokerCellBaseUrl string, projectID clients.ProjectID, schedulerStaleDuration time.Duration, helperEnv EnvConfig, forwardListener ForwardListener, receiveListener ReceiveListener, storageClient *storage.Client, psClient *pubsub.Client) (*Helper, error) {
	forwardClientOptions := NewTestCeReceiverClientOptions(forwardListener)
	ceForwardClient, err := NewCeForwardClient(forwardClientOptions)
	if err != nil {
		return nil, err
	}
	brokerE2EDeliveryProbe := handlers.NewBrokerE2EDeliveryProbe(brokerCellBaseUrl, ceForwardClient)
	cePubSubClient, err := NewCePubSubClient(ctx, psClient)
	if err != nil {
		return nil, err
	}
	cloudPubSubSourceProbe := handlers.NewCloudPubSubSourceProbe(cePubSubClient)
	cloudStorageSourceProbe := handlers.NewCloudStorageSourceProbe(storageClient)
	cloudStorageSourceCreateProbe := &handlers.CloudStorageSourceCreateProbe{
		CloudStorageSourceProbe: cloudStorageSourceProbe,
	}
	cloudStorageSourceUpdateMetadataProbe := &handlers.CloudStorageSourceUpdateMetadataProbe{
		CloudStorageSourceProbe: cloudStorageSourceProbe,
	}
	cloudStorageSourceArchiveProbe := &handlers.CloudStorageSourceArchiveProbe{
		CloudStorageSourceProbe: cloudStorageSourceProbe,
	}
	cloudStorageSourceDeleteProbe := &handlers.CloudStorageSourceDeleteProbe{
		CloudStorageSourceProbe: cloudStorageSourceProbe,
	}
	cloudAuditLogsSourceProbe := handlers.NewCloudAuditLogsSourceProbe(projectID, psClient)
	cloudSchedulerSourceProbe := handlers.NewCloudSchedulerSourceProbe(schedulerStaleDuration)
	eventTypeProbe := handlers.NewEventTypeHandler(brokerE2EDeliveryProbe, cloudPubSubSourceProbe, cloudStorageSourceCreateProbe, cloudStorageSourceUpdateMetadataProbe, cloudStorageSourceArchiveProbe, cloudStorageSourceDeleteProbe, cloudAuditLogsSourceProbe, cloudSchedulerSourceProbe)
	livenessChecker := handlers.NewLivenessChecker(cloudSchedulerSourceProbe)
	receiveClientOptions := NewTestCeForwardClientOptions(receiveListener)
	ceReceiveClient, err := NewCeReceiverClient(ctx, livenessChecker, receiveClientOptions)
	if err != nil {
		return nil, err
	}
	helper := NewHelper(helperEnv, eventTypeProbe, ceForwardClient, ceReceiveClient, livenessChecker)
	return helper, nil
}
