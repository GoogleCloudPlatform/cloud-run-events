/*
Copyright 2019 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/google/knative-gcp/pkg/apis/events/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PubSubLister helps list PubSubs.
type PubSubLister interface {
	// List lists all PubSubs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PubSub, err error)
	// PubSubs returns an object that can list and get PubSubs.
	PubSubs(namespace string) PubSubNamespaceLister
	PubSubListerExpansion
}

// pubSubLister implements the PubSubLister interface.
type pubSubLister struct {
	indexer cache.Indexer
}

// NewPubSubLister returns a new PubSubLister.
func NewPubSubLister(indexer cache.Indexer) PubSubLister {
	return &pubSubLister{indexer: indexer}
}

// List lists all PubSubs in the indexer.
func (s *pubSubLister) List(selector labels.Selector) (ret []*v1alpha1.PubSub, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PubSub))
	})
	return ret, err
}

// PubSubs returns an object that can list and get PubSubs.
func (s *pubSubLister) PubSubs(namespace string) PubSubNamespaceLister {
	return pubSubNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PubSubNamespaceLister helps list and get PubSubs.
type PubSubNamespaceLister interface {
	// List lists all PubSubs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PubSub, err error)
	// Get retrieves the PubSub from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PubSub, error)
	PubSubNamespaceListerExpansion
}

// pubSubNamespaceLister implements the PubSubNamespaceLister
// interface.
type pubSubNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PubSubs in the indexer for a given namespace.
func (s pubSubNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PubSub, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PubSub))
	})
	return ret, err
}

// Get retrieves the PubSub from the indexer for a given namespace and name.
func (s pubSubNamespaceLister) Get(name string) (*v1alpha1.PubSub, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pubsub"), name)
	}
	return obj.(*v1alpha1.PubSub), nil
}
