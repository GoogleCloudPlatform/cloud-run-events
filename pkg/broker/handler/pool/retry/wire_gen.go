// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package retry

import (
	"cloud.google.com/go/pubsub"
	"github.com/cloudevents/sdk-go/v2/protocol/http"
	"github.com/google/knative-gcp/pkg/broker/config"
	"github.com/google/knative-gcp/pkg/broker/handler/pool"
)

// Injectors from wire.go:

func InitializeTestSyncPool(targets config.ReadonlyTargets, pubsubClient *pubsub.Client, opts ...pool.Option) (*SyncPool, error) {
	v := _wireValue
	protocol, err := http.New(v...)
	if err != nil {
		return nil, err
	}
	v2 := _wireValue2
	deliverClient, err := pool.NewDeliverClient(protocol, v2...)
	if err != nil {
		return nil, err
	}
	syncPool, err := NewSyncPool(targets, pubsubClient, deliverClient, opts...)
	if err != nil {
		return nil, err
	}
	return syncPool, nil
}

var (
	_wireValue  = []http.Option(nil)
	_wireValue2 = pool.DefaultCEClientOpts
)
