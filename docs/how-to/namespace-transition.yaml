apiVersion: v1
kind: ServiceAccount
metadata:
  name: events-system-ns-mover
  namespace: cloud-run-events
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: copy-ns
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: events-system-ns-mover
  namespace: cloud-run-events
---
apiVersion: batch/v1
kind: Job
metadata:
  name: namespace-transition
  namespace: cloud-run-events
spec:
  template:
    metadata:
      name: namespace-transition
    spec:
      serviceAccountName: events-system-ns-mover
      containers:
      - name: mover
        image: bitnami/kubectl
        command: ["/bin/sh"]
        args: ["-c", "kubectl get ns cloud-run-events -o yaml | sed 's/  name: cloud-run-events/  name: events-system/g' | kubectl create -f - ; kubectl get secrets -n cloud-run-events -o yaml | sed 's/  namespace: cloud-run-events/  namespace: events-system/g' |  kubectl create -f - ; kubectl get cm  -n cloud-run-events --field-selector metadata.name!=kube-root-ca.crt -o yaml | sed 's/  namespace: cloud-run-events/  namespace: events-system/g' |  kubectl create -f -; kubectl delete deployment webhook -n cloud-run-events; kubectl delete service webhook -n cloud-run-events; kubectl delete deployment controller -n cloud-run-events; kubectl delete service controller -n cloud-run-events"]
      restartPolicy: OnFailure
  backoffLimit: 1
