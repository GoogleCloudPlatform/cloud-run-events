// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"context"
	"github.com/google/knative-gcp/pkg/broker/config/volume"
	"github.com/google/knative-gcp/pkg/broker/ingress"
	"github.com/google/knative-gcp/pkg/metrics"
)

// Injectors from wire.go:

func InitializeHandler(ctx context.Context, port ingress.Port, projectID ingress.ProjectID, podName metrics.PodName, containerName2 metrics.ContainerName) (*ingress.Handler, error) {
	httpMessageReceiver := ingress.NewHTTPMessageReceiver(port)
	v := _wireValue
	readonlyTargets, err := volume.NewTargetsFromFile(v...)
	if err != nil {
		return nil, err
	}
	client, err := ingress.NewPubsubClient(ctx, projectID)
	if err != nil {
		return nil, err
	}
	clientClient, err := ingress.NewPubsubDecoupleClient(ctx, client)
	if err != nil {
		return nil, err
	}
	multiTopicDecoupleSink := ingress.NewMultiTopicDecoupleSink(ctx, readonlyTargets, clientClient)
	statsReporter, err := metrics.NewIngressReporter(podName, containerName2)
	if err != nil {
		return nil, err
	}
	handler := ingress.NewHandler(ctx, httpMessageReceiver, multiTopicDecoupleSink, statsReporter)
	return handler, nil
}

var (
	_wireValue = []volume.Option(nil)
)
